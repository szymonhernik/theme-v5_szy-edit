<div class="audio-player-container">
	<div class="audio-play-button paragraph" id="play-button">PLAY</div>
	<div class="audio-timestamp paragraph"><span id="time-label">00:00</span> / <span id="duration-label">00:00</span></div>
	<div class="gap-tiny"></div>
	<div class="audio-playbar-container">
		<div class="audio-playbar-progress" id="playbar-progress" style="background-color: var(--blue)"></div>
		<div class="audio-playbar-slider-container">
			<input class="audio-playbar-slider" id="playbar-slider" type="range" min="0" max="1000" value="0"></input>
		</div>
	</div>
</div>

<style>

	.audio-player-container {
		position: relative;
		width: 100%;
	}

	.audio-play-button {
		width: fit-content;
		cursor: pointer;
	}

	.audio-timestamp {
		position: absolute;
		right: 0;
		top: 0;
	}

	.audio-playbar-container {
		width: 100%;
		height: 36px; 
		position: relative;
		background-color: var(--white);
	}

	@media screen and (max-width: 1420px) {
		.audio-playbar-container {
			height: 32px;
		}
	}

	@media screen and (max-width: 1250px) {
		.audio-playbar-container {
			height: 27px;
		}
	}

	@media screen and (max-width: 1080px) {
		.audio-playbar-container {
			height: 23px;
		}
	}

	@media screen and (max-width: 920px) {
		.audio-playbar-container {
			height: 18px;
		}
	}

	@media screen and (max-width: 750px) {
		.audio-playbar-container {
			height: 14px;
		}
	}

	@media screen and (max-width: 600px) {
		.audio-playbar-container {
			height: 26px;
		}
	}

	.audio-playbar-progress {
		width: 0;
		height: 100%;
		position: absolute;
		top: 0;
		-webkit-transition: width 450ms cubic-bezier(0.19, 1, 0.22, 1);
		-moz-transition: width 450ms cubic-bezier(0.19, 1, 0.22, 1);
		-ms-transition: width 450ms cubic-bezier(0.19, 1, 0.22, 1);
		-o-transition: width 450ms cubic-bezier(0.19, 1, 0.22, 1);
		transition: width 450ms cubic-bezier(0.19, 1, 0.22, 1);
	}

	.audio-playbar-slider-container {
		width: 100%;
		height: 100%;
		position: absolute;
	}

	.audio-playbar-slider {
		width: 100%;
		height: 100%;
		-webkit-appearance: none;
	    appearance: none;
	    cursor: pointer;
	    opacity: 0;
	}
</style>

<script>

	// load audio file into player
	var audio = new Audio("{{ audio-file }}");

	// get play button variable
    var playButton = document.getElementById("play-button");

    // get variables for time and duration labels
    var timeLabel = document.getElementById("time-label");
    var durationLabel = document.getElementById("duration-label");

    // get variable for playbar
    var playbarProgress = document.getElementById("playbar-progress");

    // get variable for slider
    var playbarSlider = document.getElementById("playbar-slider");

    // start by not playing
    let isPlaying = 0

    // update duration on audio load
	audio.addEventListener("loadeddata", () => {
		durationLabel.textContent = convertTime(audio.duration)
		},
		false
	);

    // when playbutton clicked
    playButton.addEventListener("click", function() {
        if (isPlaying == 0) {
            audio.play();
            isPlaying = true
            playButton.innerHTML = "PAUSE"
            window.requestAnimationFrame(prog_animation);
        } else { 
            audio.pause();
            isPlaying = false
            playButton.innerHTML = "PLAY"
        }
    });

    // update time label when the audio is playing
    audio.addEventListener("timeupdate", function() {
        timeLabel.textContent = convertTime(audio.currentTime)
    });

    function prog_animation() {
  		playbarProgress.style.setProperty("width", (audio.currentTime / audio.duration) * 100 + "%");
  		window.requestAnimationFrame(prog_animation);
	};

    // update current time on slider drag
    playbarSlider.addEventListener("input", function() {
        var sliderValue = Number(this.value);
        audio.currentTime = (sliderValue / 1000) * audio.duration;
    });

    // reset on audio end
    audio.addEventListener("ended", function() {
    	audio.pause();
        isPlaying = false
        playButton.innerHTML = "PLAY"
        playbarProgress.style.setProperty("width", "0")
        audio.currentTime = 0;
        timeLabel.textContent = convertTime(audio.currentTime)
    });

    // utility function to convert time into correct display figure
    var convertTime = function(time)
    {    
        var mins = Math.floor(time / 60);
        if (mins < 10) {
          mins = '0' + String(mins);
        }
        var secs = Math.floor(time % 60);
        if (secs < 10) {
          secs = '0' + String(secs);
        }

        return mins + ':' + secs;
    }

</script>